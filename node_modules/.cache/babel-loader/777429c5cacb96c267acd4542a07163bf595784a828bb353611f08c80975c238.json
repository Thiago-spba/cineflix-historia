{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thiago Fernando\\\\cineflixhistoria\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const fetchVideos = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/videos');\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar os vídeos: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Vídeos carregados:', data); // Log para depuração\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar os vídeos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '70px',\n      backgroundColor: '#111',\n      minHeight: '100vh',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: 'red',\n        marginBottom: '20px'\n      },\n      children: \"Lista de V\\xEDdeos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), videos.length > 0 ? videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${new URL(video.url).searchParams.get('v')}`,\n        title: video.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Nenhum v\\xEDdeo dispon\\xEDvel no momento.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","videos","setVideos","fetchVideos","response","fetch","ok","Error","status","data","json","console","log","error","style","paddingTop","backgroundColor","minHeight","color","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","map","video","title","width","height","src","URL","url","searchParams","get","frameBorder","allow","allowFullScreen","id","_c","$RefreshReg$"],"sources":["C:/Users/Thiago Fernando/cineflixhistoria/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Home() {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/videos');\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar os vídeos: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log('Vídeos carregados:', data); // Log para depuração\r\n      setVideos(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar os vídeos:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ paddingTop: '70px', backgroundColor: '#111', minHeight: '100vh', color: '#fff' }}>\r\n      <h1 style={{ textAlign: 'center', color: 'red', marginBottom: '20px' }}>Lista de Vídeos</h1>\r\n      {videos.length > 0 ? (\r\n        videos.map((video) => (\r\n          <div key={video.id} style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n            <h2>{video.title}</h2>\r\n            <iframe\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src={`https://www.youtube.com/embed/${new URL(video.url).searchParams.get('v')}`}\r\n              title={video.title}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p style={{ textAlign: 'center' }}>Nenhum vídeo disponível no momento.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6BH,QAAQ,CAACI,MAAM,EAAE,CAAC;MACjE;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC,CAAC,CAAC;MACzCP,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKgB,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,eAAe,EAAE,MAAM;MAAEC,SAAS,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7FrB,OAAA;MAAIgB,KAAK,EAAE;QAAEM,SAAS,EAAE,QAAQ;QAAEF,KAAK,EAAE,KAAK;QAAEG,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3FxB,MAAM,CAACyB,MAAM,GAAG,CAAC,GAChBzB,MAAM,CAAC0B,GAAG,CAAEC,KAAK,iBACf9B,OAAA;MAAoBgB,KAAK,EAAE;QAAEM,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,gBACvErB,OAAA;QAAAqB,QAAA,EAAKS,KAAK,CAACC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtB3B,OAAA;QACEgC,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZC,GAAG,EAAE,iCAAiC,IAAIC,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,GAAG,CAAC,EAAG;QACjFP,KAAK,EAAED,KAAK,CAACC,KAAM;QACnBQ,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,0FAA0F;QAChGC,eAAe;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,GAVFG,KAAK,CAACY,EAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACN,CAAC,gBAEF3B,OAAA;MAAGgB,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAmC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CA5CQD,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}